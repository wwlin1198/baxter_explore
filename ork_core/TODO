ecto:
update the docs to say devel is done but still maintained

Build:
- no default build of tutorials
- split the tests (db tests should at least be separated)

Interface:
- create a simple graph plasm viewer for ORK
- get the ecto_gooey to work with ORK

Performance:
- Mike's stuff

DB:
- move to a system dependency with python-couchdb after Fuerte (dropping Oneiric support)
- delete things from the DB, find orphans, find missing components (models ...), find duplicates
- better object representation (model, inline images, 3d models ...)
  - HTML - see the model_viewer under apps. Its a couch app, we can make it do whatever.
           Currently have something for viewing the meshes, and something for viewing the objects.
- be able to only replicate models in a DB (to put on the PR2)
- add meta data that is missing (meet with everybody). We want: timestamp of the session, the sensor id
- use a single view for all model types
- is models.py obsolete? Soonish with the view to find observations
- make more db manipulation scripts apps/dbscripts ... FIXME don't break these.

Capture:
- upload through the capture GUI. Also have the triggering of all the other models (RabbitMQ ...)
- should be a parameter file for the type of fiducials

Doc:
- write docs for ecto_gooey

New cells:
- masks, filters
- Mike's stuff

Test:
- ground truth format?  Look at NIST CSV.  Possibly come up with bag format too, where each frame has a listing of object id and pose relative to the sensor
- ground truth capture... Use the NIST Ponoko rig to capture scenes with GT poses. Needs a simple app or something.
- fix tests in /test that are unused
















(ROS) logging everything happening between the Python launch and when the plasm starts
the automatic docs should use the parameters from the cell only, and have a function to overload
doc_config belongs to python_or_core
